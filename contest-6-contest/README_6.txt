Задача 06-3: Сортировка списка
Во входном файле input.txt записана последовательность чисел. Числа в последовтельности целые, по модулю не превосходящие 109. Их количество не превышает 4000.

Требуется отсортировать данную последовательность по неубыванию и вывести результат в файл output.txt.

Указание: при решении данной задачи запрещается использовать массивы. Для хранения последовательности используйте однонаправленный или двунаправленный список.

Примеры
Входные данные в файле input.txt
2 4 1 3 5 8
Результат работы в файле output.txt
1 2 3 4 5 8
Входные данные в файле input.txt
-5 3 -2 1 0 -4 3
Результат работы в файле output.txt
-5 -4 -2 0 1 3 3


Задача 06-6: Удаление
Во входном файле input.txt записаны две строки, каждая из которых содержит последовательность из не более чем 10000 целых чисел. Обе последовательности заканчиваются числом -1 (и оно не входит в последовательность), остальные числа неотрицательны и не превосходят 109. Требуется в файл output.txt вывести без изменения порядка все члены первой последовательности, кроме тех которые встречаются во второй последовательности.

Указание: при решении данной задачи запрещается использовать массивы. Для хранения последовательности чисел используйте однонаправленный или двунаправленный список.

Примеры
Входные данные в файле input.txt
2 4 1 3 5 8 -1
1 8 4 12 -1
Результат работы в файле output.txt
2 3 5
Входные данные в файле input.txt
5 3 2 1 0 4 3 -1
3 5 4 2 0 -1
Результат работы в файле output.txt
1


Задача 06-10: 2-перемешивание
Последовательность ai состоит из N членов и задается формулой

ai = i
.
К данной последовательности M раз применяют следующее преобразование: все члены последовательности, начиная с члена равного bj (1-ый парметр преобразования) и до члена равного cj (2-йо параметр преобразования) переносятся в начало. Их относительный порядок не меняется, так же как и порядок членов стоящих до члена равного bj или полсе cj. Гарантируется, что член равный bj встречается в последовательности не позже члена равного cj.

Например, пусть исходная последовательность имела 7 членов и к ней было применено описанное преобразование с параметрами 4 и 6. Тогда получится последовательность (4, 5, 6, 1, 2, 3, 7). Если к это последовательности применить преобразование с параметрами 5 и 2 то получится последовательность (5, 6, 1, 2, 4, 3, 7).

Требуется определить, какая последовательность получится в результате применения к исходной заданно серии преобрзований.

Во входном файле input.txt записаны натуральные числа N и M, не превосходящие 105. За ними следуют M пар чисел - параметры преобразований.

В выходной файл output.txt выведите полученную последовательность.

Примеры
Входные данные в файле input.txt
7 1
4 6
Результат работы в файле output.txt
4 5 6 1 2 3 7
Входные данные в файле input.txt
7 2
4 6
5 2
Результат работы в файле output.txt
5 6 1 2 4 3 7
Входные данные в файле input.txt
7 3
4 6
5 2
1 7
Результат работы в файле output.txt
1 2 4 3 7 5 6


ОШИБКА ВЫПОЛНЕНИЯ НА 2 ТЕСТЕ!!!!!!!!!!!!!!!!!!!!
Задача 06-12: Генерал танковых войск
Генерал танковых войск Петя из 8Б класса проснулся в это субботнее утро в приподнятом настроении. Сегодня он и его верные братья по оружию нанесут решительный удар по Берлину, отомстят своим жалким недругам из 9В класса, добудут много золота и покроют себя славой. И вэтот раз никакие ничего не понимающие в тактике главнокомандующие-родители не прервут героическую операцию под предлогом того, что ночные наступления совершенно недопустимы. К сожалению, Петя обнаружил, что один из родителей, недовольный тем, что успехи Пети вне поля сражения не дотягивают даже до звания рядового, сменил пароль от компьютера. Рядом Петей была найдена бумажка с длинной строкой. Вспомнив все предыдущие пароли, он понял, что каждый новый является подстрокой данной строки. Прикинув время, необходимое для проверки одного пароля, Петя теперь хочет подсчитать сколько вообще паролей возможно(то есть различных подстрок, включая пустую), чтобы понять, успеет ли он к ночному наступлению. Разделите горе Пети и помогите ему.

Входные данные. Дана строка состоящая из маленьких латинских букв и длины не более, чем 2000 символов.

Выходные данные. Выведите единственное число — количество различных подстрок входной строки.

Указание. Используйте для решения цифровой поиск (бор).

Примеры
Входные данные
ababa
Результат работы
10


Задача 06-14: Наизнанку
На вход подаётся бинарный файл в следующем формате: первые два байта являются целым числом, которое не превышает 2000 и задаёт размер квадратной матрицы, затем следуют целочисленные 32х битные элементы матрицы. Все числа находятся в представлении big-endian. Требуется отыскать след матрицы и вывести его в бинарный файл в виде 64х битного целого числа в формате big-endian.

Комментарии к примеру

Поскольку бинарный файл не может быть вставлен в тектовое условие задачи, в таблице внизу приведены значение всех байтов файла в 16-ричном виде. Каждый байт задаёт пара 16-ричных чисел. Таким образом, значение каждого байта можте быть от 0016 до FF16 (это 25510). В первом примере размер диагональной матрицы равен 1 (матрица 1x1), единственный элемент тоже равен одному, след матрицы также равен 1. Во втором примере задана матрица 2x2 со следом 0.

Скачать приведённые примеры в бинарном виде и еще несколько можно по адресу http://earth.ispras.ru/inputs/06-14/.

Примеры
Входные данные в файле matrix.in
00 01 00 00 00 01
Результат работы в файле trace.out
00 00 00 00 00 00 00 01
Входные данные в файле matrix.in
00 02 00 00 00 01 2F 6A 57 8E E1 A9 DE AE FF FF FF FF
Результат работы в файле trace.out
00 00 00 00 00 00 00 00


Задача 06-15: Domain Name System
Представьте, что вы пишете DNS сервер. У вас есть соответствие доменных имен компьютеров их IP-адресам. Вам необходимо эффективно обрабатывать запросы на получение IP-адреса компьютера по его имени.

Во входном файле input.txt записано число N (1 ≤ N ≤ 100000) - количество известных соответствий между именем компьютера и его адресом, за которым следует N записей вида ⟨имя компьютера⟩ ⟨IP-адрес компьютера⟩ - сами эти соответствия. Далее идет число M (1 ≤ M ≤ 100000) - количество запросов. Каждый запрос представляет собой одну строку с именем компьютера.

Имена компьютеров - строки, состоящие из маленьких латинских букв, символов "." и "-". Длины имен не превышают 100 символов. IP-адреса - 32-битные беззнаковые целые числа. Не бывает двух компьютеров с одинаковым именем. У каждого компьютера может быть только один адрес, но может быть несколько различных имен.

В выходной файл output.txt требуется вывести результаты обработки всех запросов в том порядке, в котором запросы встречаются во входном файле. Результатом обработки запроса является одно беззнаковое 32-битное число - IP-адрес запрашиваемого компьютера, если он известен, либо -1, если IP-адрес данного компьютера неизвестен.

Примеры
Входные данные в файле input.txt
3
algcourse.cs.msu.su 2667188916
google.com 1249728355
yandex.ru 1476066059
5
algcourse.cs.msu.su
nohost.nodomain
localhost.localdomain
yandex.ru
algcourse.cs.msu.su
Результат работы в файле output.txt
2667188916
-1
-1
1476066059
2667188916


Задача 06-16: Сортировка большого списка
Во входном файле input.txt записана последовательность чисел. Числа в последовтельности целые, по модулю не превосходящие 109. Их количество не превышает 105.

Требуется отсортировать данную последовательность по неубыванию и вывести результат в файл output.txt.

Указание: при решении данной задачи запрещается использовать массивы. Для хранения последовательности используйте однонаправленный или двунаправленный список.

Примеры
Входные данные в файле input.txt
2 4 1 3 5 8
Результат работы в файле output.txt
1 2 3 4 5 8
Входные данные в файле input.txt
-5 3 -2 1 0 -4 3
Результат работы в файле output.txt
-5 -4 -2 0 1 3 3

